import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as ani
from matplotlib import rc
import seaborn as sns
from IPython.display import HTML

def f(x):
    '''
    The function of graph
    '''
    return x**4/4 - x**3/3 - 8*x**2 + 16*x

def f_deriv(x):
    '''
    The derivative of function f(x)
    '''
    return x**3 - x**2 - 16*x + 16

def plot_line(slope, x, y):
    '''
    Draw the tangent
    '''
    xbase = np.linspace(x_low, x_high, 100)
    inception = - x*slope + y
    y1 = slope * xbase + inception
    plt.plot(xbase, y1, c='red')

def calculate(initial_x, learning_rate, precision, nmax=300):
    '''
    Calculate the gradient
    '''
    list_xs = []
    list_ys = []
    list_slope = []
    list_diff = []

    current_x = initial_x

    for i in range(nmax):
        current_y = f(current_x)
        slope = f_deriv(current_x)
        list_xs.append(current_x)
        list_ys.append(current_y)
        list_slope.append(slope)

        diff = learning_rate * slope
        current_x -= diff
        list_diff.append(diff)

        if abs(diff) < precision and i != 0:
            break

    return i, list_xs, list_ys, list_slope, list_diff

def animation(i):
    '''
    Draw the animation
    '''
    xs = list_xs[i]
    ys = list_ys[i]
    slope = list_slope[i]
    diff = list_diff[i]

    plt.clf()

    plt.title(f'i={i}, diff={diff:.5f}, init_x={initial_x}, curr_x={xs:.3f}, lr={learning_rate}')
    plt.xlabel('x')
    plt.ylabel('y')
    plot_line(slope, xs, ys)
    plt.plot(xs, ys, c='red', marker='o', ms='8')
    plt.plot(x, y, c='blue')
    plt.xlim(x_low, x_high)
    plt.ylim(-120, 220)



x_low = -7
x_high = 7
x = np.linspace(x_low, x_high, 100)
y = f(x)

learning_rate = 0.01
precision = 1e-6

initial_x = -7
i, list_xs, list_ys, list_slope, list_diff = calculate(initial_x, learning_rate, precision)

sns.set()
sns.set_style('whitegrid')

fig = plt.figure(figsize=((6.5, 6.5)))

anim = ani.FuncAnimation(fig, animation, frames=i, interval=150)

# Please remove the hashtag if you save the animation as a GIF file
# anim.save(f'Gradient_decent_{initial_x}_lr{learning_rate}_anim.gif', writer='pillow', dpi=300)

# Please remove the hashtag if you want to check the animation on the console
# rc('animation', html='jshtml')
# anim
